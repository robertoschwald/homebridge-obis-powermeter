name: Publish to npm

on:
  push:
    tags:
      - 'v*.*.*'

permissions:
  contents: read
  id-token: write # for npm provenance

concurrency:
  group: publish-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-plugin:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          always-auth: true

      - name: Ensure tag commit is on main
        run: |
          git fetch --no-tags --depth=0 origin +refs/heads/main:refs/remotes/origin/main
          if git merge-base --is-ancestor "$GITHUB_SHA" origin/main; then
            echo "Tagged commit is on main branch. Good."
          else
            echo "Refusing to publish: tag commit is not on protected branch 'main'." >&2
            exit 1
          fi

      - name: Check npm
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm whoami

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test -- --runInBand

      - name: Build
        run: npm run build

      - name: Show npm pack file list (dry-run)
        run: npm pack --dry-run

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-${{ github.ref_name }}
          path: |
            dist/**
            package.json
            README.md
            LICENSE
            config.schema.json
            doc/**
          retention-days: 7

  release:
    name: npm-publish
    needs: [build-plugin]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'
          always-auth: true

      - name: Verify tag matches package.json version
        run: |
          TAG="${GITHUB_REF_NAME#v}"
          PKG_VERSION=$(node -p "require('./package.json').version")
          echo "Tag: v$TAG"
          echo "package.json: $PKG_VERSION"
          if [ "$TAG" != "$PKG_VERSION" ]; then
            echo "Error: tag v$TAG does not match package.json version $PKG_VERSION" >&2
            exit 1
          fi

      - name: Install (for publish metadata)
        run: npm ci --omit=dev

      - name: Publish to npm
        if: github.repository == 'robertoschwald/homebridge-obis-powermeter'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          npm publish --access public --provenance

  attach-release:
    name: attach-artifacts-to-release
    needs: [build-plugin, release]
    if: github.repository == 'robertoschwald/homebridge-obis-powermeter'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: package-${{ github.ref_name }}
          path: release-assets

      - name: Create GitHub Release and upload assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          files: release-assets/**
          draft: false
          prerelease: false
